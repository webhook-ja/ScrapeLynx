# ============================================
# SCRAPELYNX - ONE-CLICK INSTALL
# Para Easypanel
# ============================================

version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: scrapelynx-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-scrapelynx}
      POSTGRES_USER: ${POSTGRES_USER:-scrapelynx}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-scrapelynx}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis para cachÃ© (opcional)
  redis:
    image: redis:7-alpine
    container_name: scrapelynx-redis
    restart: always
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # ScrapeLynx API
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scrapelynx-api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${PORT:-8000}:8000"
    environment:
      # Auto-generated by Easypanel
      DATABASE_URL: postgresql://${POSTGRES_USER:-scrapelynx}:${POSTGRES_PASSWORD:-changeme123}@postgres:5432/${POSTGRES_DB:-scrapelynx}
      REDIS_URL: redis://redis:6379/0

      # User configuration
      TEMU_AFFILIATE_ID: ${TEMU_AFFILIATE_ID}
      OPENAI_API_KEY: ${OPENAI_API_KEY}

      # Auto-config
      DATABASE_TYPE: postgresql
      REDIS_ENABLED: "true"
      ENVIRONMENT: ${ENVIRONMENT:-production}
      PORT: ${PORT:-8000}
      LLM_PROVIDER: ${LLM_PROVIDER:-openai/gpt-4o-mini}
      CORS_ORIGINS: ${CORS_ORIGINS:-*}
      MAX_CONCURRENT_REQUESTS: ${MAX_CONCURRENT_REQUESTS:-3}
      REQUEST_DELAY_SECONDS: ${REQUEST_DELAY_SECONDS:-2}
    volumes:
      - app_results:/app/results
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
  redis_data:
  app_results:
  app_logs:

# ============================================
# INSTALACIÃ“N EN EASYPANEL:
# ============================================
# 1. Importa este repositorio en Easypanel
# 2. Usa este archivo docker-compose.easypanel.yml
# 3. Configura SOLO 2 variables:
#    - TEMU_AFFILIATE_ID
#    - OPENAI_API_KEY
# 4. Deploy
# 5. Â¡Listo! ðŸš€
# ============================================
